/****************************************************************\
*       КАФЕДРА № 304 1 КУРС  CPP  ЛАБОРАТОРНАЯ РАБОТА           *
*----------------------------------------------------------------*
* Project Type  : Win32 Console Application                      *
* Project Name  : lr3                                          *
* File Name     : lr3.cpp                                      *
* Language      : C/C++                                          *
* Programmer(s) : Багиров Э., Нуриев Н.                          *
* Modifyed By   :                                                *
* Created       : 11/28/21                                       *
* Last Revision : 1_/__/21                                       *
* Comment(s)    : Код к ЛР№3 - "Одномерные массивы"           *
\****************************************************************/

#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main()
{
	setlocale(LC_ALL, "Russian"); // подключение русского языка
	system("color F0");			// 
	int N;			// первое число из файла
	int M;			// второе число из файла
	int VEC[7] = {0};		// массив,считываемый из файла
	int NEWVEC[7] = {0};	// вектор, создаваемый по заданию
	int otr = 0;		// сумма отрицательных элементов VEC
	int nwsum = 0;		// сумма элементов массива NEWVEC
	int nwotr = 0;		// сумма отрицательных элементов массива NEWVEC
	int nwpol = 0;		// сумма положительных элементов массива NEWVEC

	//1----------------------------------------------------------------
	ifstream fl;	// создание объекта класса ifstream
	fl.open("lr3.txt");		// связывание объекта с файлом 
	fl >> N;		// считывание первого числа из файла в N
	fl >> M;		// считывание первого числа из файла в М
	if (N > M) {
		cout << "ОШИБКА! N должно быть меньше M!";
		return 1;
	} // if
	/*for (int i = 0; i <= 6; i++) {
		fl >> VEC[i];					// один из способов чтения файла в массив, но если *юзер* даст не 7 чисел, то прога будет криво работать
	}*/
	cout << N << "\t" << M << endl;		// вывод N и M
	int k = 0;		// здесь будет количество элементов в массиве
	while (!fl.eof()) {					// считывание данных в массив VEC и рассчет его мощности в k
		fl >> VEC[k];
		k++;
	} // while
	fl.close();							// закрытие файла для чтения
	if (k <= N || k < M) {
		cout << "ОШИБКА! Количество элементов в массиве должно быть больше N или больше или равно M";
		return 2;
	} // if
	for (int i = 0; i < k; i++) {		// печать VEC
		cout << VEC[i] << "\t";
	} // for
	cout << "\n";
	//2-------------------------------------------------------------------------
	for (int i = 0; i < N; i++) {		// рассчет суммы отрицательных элементов VEC
		if (VEC[i] < 0)
			otr += VEC[i];
	} // for
	cout << otr << "\n";				// печать суммы отрицательных элементов VEC
	for (int i = 0; i < k; i++) {		// составление нового массива NEWVEC по правилу, заданному в задании
		NEWVEC[i] = VEC[i] + otr;
	} // for

	//3-------------------------------------------------------------------------
	for (int i = 0; i < k; i++) {		// рассчет суммы элементов NEWVEC
		nwsum += NEWVEC[i];
		if (NEWVEC[i] < 0) {
			nwotr += NEWVEC[i];			// рассчет суммы отрицательных элементов NEWVEC
		}
		else {
			nwpol += NEWVEC[i];			// рассчет суммы положительных элементов NEWVEC
		} // if
	} // for

	//4-------------------------------------------------------------------------
	cout << "Вывод элементов массива:\n";
	for (int i = 0; i < k; i++) {
		cout <<"["<< i <<"]"<< ":" << NEWVEC[i] << "\n";
	} // for
	cout << "Сумма элементов NEWVEC:" << nwsum << "\n" << "Сумма положительных элементов NEWVEC:	" << nwpol
		<< "\n" << "Сумма отрицательных элементов NEWVEC:	" << nwotr << "\n";

	//5-------------------------------------------------------------------------
	int iMinPolEl;					 // индекс минимального положительного элемента
	int MinPolEl = 999999999;		 // минимальный положительный элемент
	for (int i = N; i <= M; i++) {	 // нахождение минимального положительного элемента и его индекса в NEWVEC
		if (NEWVEC[i] > 0 && NEWVEC[i] < MinPolEl) {
			MinPolEl = NEWVEC[i];
			iMinPolEl = i;
		} // if
	} // for
	cout << "Минимальный положительный элемент NEWVEC:\t" << MinPolEl << "\n" << "Индекс минимального положительного элемента:\t" << iMinPolEl;
	system("pause");
	return 0;
}

